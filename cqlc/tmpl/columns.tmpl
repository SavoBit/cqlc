// THIS FILE WAS AUTOGENERATED - ANY EDITS TO THIS WILL BE LOST WHEN IT IS REGENERATED

package cqlc

import (
	"github.com/gocql/gocql"
	"speter.net/go/exp/math/dec/inf"
	"time"
)

{{ range $_, $t := .types }}

type {{ $t.Prefix }}Column interface {
	Column
	To(value *{{ $t.Literal }}) ColumnBinding
}

type Equality{{ $t.Prefix }}Column interface {
	{{ $t.Prefix }}Column
	Eq(value {{ $t.Literal }}) Condition
}

type Partitioned{{ $t.Prefix }}Column interface {
	PartitionedColumn
	Equality{{ $t.Prefix }}Column
}

type LastPartitioned{{ $t.Prefix }}Column interface {
	Partitioned{{ $t.Prefix }}Column
	In(value ...{{ $t.Literal }}) Condition
}

type Clustered{{ $t.Prefix }}Column interface {
	ClusteredColumn
	Equality{{ $t.Prefix }}Column
	Gt(value {{ $t.Literal }}) Condition
	Lt(value {{ $t.Literal }}) Condition
	Ge(value {{ $t.Literal }}) Condition
	Le(value {{ $t.Literal }}) Condition
}

type LastClustered{{ $t.Prefix }}Column interface {
	Clustered{{ $t.Prefix }}Column
	In(value ...{{ $t.Literal }}) Condition
}

{{ end }}

type SetValueStep interface {
	Executable
	SelectWhereStep
	Apply(cols ...ColumnBinding) SetValueStep
	IfExists(cols ...ColumnBinding) CompareAndSwap

	{{ range $_, $t := .types }}
	Set{{ $t.Prefix }}(col {{ $t.Prefix }}Column, value {{ $t.Literal }} ) SetValueStep
	{{ end }}

	SetMap(col MapColumn, value map[string]string) SetValueStep
	SetArray(col ArrayColumn, value []string) SetValueStep
}

func (c *Context) SetMap(col MapColumn, value map[string]string) SetValueStep {
	set(c, col, value)
	return c
}

func (c *Context) SetArray(col ArrayColumn, value []string) SetValueStep {
	set(c, col, value)
	return c
}

{{ range $_, $t := .types }}
func (c *Context) Set{{ $t.Prefix }}(col {{ $t.Prefix }}Column, value {{ $t.Literal }} ) SetValueStep {
	set(c, col, value)
	return c
}
{{ end }}